#include <stdio.h>
#include <string.h>

#define MAX_STUDENTS 100

// Structure to store student information
struct Student {
    int roll_no;
    char name[50];
    float marks;
};

// Function prototypes
void inputStudentData(struct Student students[], int n);
void displayStudentData(struct Student students[], int n);
void bubbleSort(struct Student students[], int n);
void insertionSort(struct Student students[], int n);
void selectionSort(struct Student students[], int n);

// Main function
int main() {
    struct Student students[MAX_STUDENTS];
    int n, choice;

    printf("Enter the number of students: ");
    scanf("%d", &n);

    inputStudentData(students, n);

    printf("\nChoose a sorting technique:\n");
    printf("1. Bubble Sort\n");
    printf("2. Insertion Sort\n");
    printf("3. Selection Sort\n");
    printf("Enter your choice: ");
    scanf("%d", &choice);

    switch (choice) {
        case 1:
            bubbleSort(students, n);
            printf("\nStudents sorted by roll number using Bubble Sort:\n");
            displayStudentData(students, n);
            break;
        case 2:
            insertionSort(students, n);
            printf("\nStudents sorted by roll number using Insertion Sort:\n");
            displayStudentData(students, n);
            break;
        case 3:
            selectionSort(students, n);
            printf("\nStudents sorted by roll number using Selection Sort:\n");
            displayStudentData(students, n);
            break;
        default:
            printf("Invalid choice!\n");
    }

    return 0;
}

// Function to input student data
void inputStudentData(struct Student students[], int n) {
    for (int i = 0; i < n; i++) {
        printf("\nEnter details for student %d\n", i + 1);
        printf("Roll No: ");
        scanf("%d", &students[i].roll_no);
        printf("Name: ");
        scanf("%s", students[i].name);
        printf("Marks: ");
        scanf("%f", &students[i].marks);
    }
}

// Function to display student data
void displayStudentData(struct Student students[], int n) {
    printf("\n%-10s %-20s %-10s\n", "Roll No", "Name", "Marks");
    printf("---------------------------------------------\n");
    for (int i = 0; i < n; i++) {
        printf("%-10d %-20s %-10.2f\n", students[i].roll_no, students[i].name, students[i].marks);
    }
}

// Bubble Sort function
void bubbleSort(struct Student students[], int n) {
    struct Student temp;
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (students[j].roll_no > students[j + 1].roll_no) {
                // Swap the students
                temp = students[j];
                students[j] = students[j + 1];
                students[j + 1] = temp;
            }
        }
    }
}

// Insertion Sort function
void insertionSort(struct Student students[], int n) {
    struct Student key;
    int j;
    for (int i = 1; i < n; i++) {
        key = students[i];
        j = i - 1;

        // Move elements that are greater than key to one position ahead
        while (j >= 0 && students[j].roll_no > key.roll_no) {
            students[j + 1] = students[j];
            j = j - 1;
        }
        students[j + 1] = key;
    }
}

// Selection Sort function
void selectionSort(struct Student students[], int n) {
    int min_idx;
    struct Student temp;
    for (int i = 0; i < n - 1; i++) {
        min_idx = i;
        for (int j = i + 1; j < n; j++) {
            if (students[j].roll_no < students[min_idx].roll_no) {
                min_idx = j;
            }
        }
        // Swap the found minimum element with the first element
        temp = students[i];
        students[i] = students[min_idx];
        students[min_idx] = temp;
    }
}
